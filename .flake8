[flake8]
# Base flake8 configuration
max-line-length = 88
max-complexity = 10
select = E,W,F,C
ignore = 
    # E203: whitespace before ':' (conflicts with black)
    E203,
    # E501: line too long (handled by black)
    E501,
    # W503: line break before binary operator (conflicts with black)
    W503,
    # F401: imported but unused (handled by isort and autoflake)
    # F401,
    # E402: module level import not at top of file
    # E402,

# File patterns to exclude
exclude = 
    .git,
    __pycache__,
    .pytest_cache,
    .mypy_cache,
    .tox,
    .venv,
    venv,
    env,
    ENV,
    env.bak,
    venv.bak,
    build,
    dist,
    *.egg-info,
    .eggs,
    docs/_build,
    migrations,
    alembic/versions,
    node_modules,
    .coverage,
    htmlcov,
    .DS_Store,
    *.pyc,
    *.pyo,
    *.pyd,
    .Python,
    *.so,
    .cache,
    logs,
    data/temp,
    models/*.pt,
    models/*.onnx

# Per-file ignores
per-file-ignores = 
    # __init__.py files can have unused imports
    __init__.py:F401,
    # Test files can have longer lines and unused imports
    tests/*.py:E501,F401,F811,
    # Configuration files
    config/*.py:E501,
    # Scripts can be more relaxed
    scripts/*.py:E501,F401,
    # Main entry points
    main.py:E501,
    # Setup files
    setup.py:E501,F401,

# Docstring conventions
docstring-convention = google

# Import order checking
import-order-style = google
application-import-names = src

# Naming conventions
classmethod-decorators = 
    classmethod,
    pydantic.validator,
    pydantic.root_validator,

staticmethod-decorators = 
    staticmethod,

# Inline comments
inline-quotes = double

# McCabe complexity
max-complexity = 10

# Specific error codes to enable
enable-extensions = 
    # flake8-bugbear
    B,
    # flake8-comprehensions  
    C4,
    # flake8-docstrings
    D,
    # flake8-import-order
    I,
    # flake8-quotes
    Q,

# Docstring error codes to ignore
extend-ignore = 
    # D100: Missing docstring in public module
    D100,
    # D101: Missing docstring in public class
    # D101,
    # D102: Missing docstring in public method
    # D102,
    # D103: Missing docstring in public function
    # D103,
    # D104: Missing docstring in public package
    D104,
    # D105: Missing docstring in magic method
    D105,
    # D106: Missing docstring in public nested class
    D106,
    # D107: Missing docstring in __init__
    D107,
    # D200: One-line docstring should fit on one line
    D200,
    # D202: No blank lines allowed after function docstring
    D202,
    # D203: 1 blank line required before class docstring
    D203,
    # D212: Multi-line docstring summary should start at the first line
    D212,
    # D213: Multi-line docstring summary should start at the second line
    D213,
    # D400: First line should end with a period
    D400,
    # D401: First line should be in imperative mood
    D401,
    # D415: First line should end with a period, question mark, or exclamation point
    D415,

# Quotes configuration
inline-quotes = double
multiline-quotes = double
docstring-quotes = double
avoid-escape = True